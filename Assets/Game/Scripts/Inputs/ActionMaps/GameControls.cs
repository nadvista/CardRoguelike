//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Game/Inputs/GameControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameControls"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""466dc19f-347f-480b-aadf-c07bec99cce8"",
            ""actions"": [
                {
                    ""name"": ""Switch1"",
                    ""type"": ""Button"",
                    ""id"": ""0a0f171d-a2e5-41fb-b879-1da0efdbff50"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch2"",
                    ""type"": ""Button"",
                    ""id"": ""758eb9ba-fd4c-4c99-b04f-23fa3e9f55d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch3"",
                    ""type"": ""Button"",
                    ""id"": ""a49fb976-13ea-40d7-aea5-27ed6de01389"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Switch4"",
                    ""type"": ""Button"",
                    ""id"": ""d0c818cd-c3e9-4103-b304-9007ed2f3bb0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Play1"",
                    ""type"": ""Button"",
                    ""id"": ""6a7df2d4-aaf2-416e-9abf-bacf314c371a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Play2"",
                    ""type"": ""Button"",
                    ""id"": ""96f72b35-31c8-4923-9edc-62968264de6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Play3"",
                    ""type"": ""Button"",
                    ""id"": ""921df47b-e808-402d-b94c-517fd2ed19dd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Play4"",
                    ""type"": ""Button"",
                    ""id"": ""5bf06bf8-e809-46fd-87d7-bc453af6e198"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""eac095bc-ff05-41f8-b945-992c90d64f55"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cda60241-7de3-4536-bd7e-385a7a8fa620"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f15afd91-d339-4417-8899-6bebfbd0fd7c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb53ef36-51bb-4fcf-bb30-0be96406488a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Switch4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1c3ac06-fa36-4350-abe7-3fc2b8159836"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Play1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""61d6d384-28d1-4995-83db-076fb27820ee"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Play2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e8e426be-b61d-4940-9753-a0a015721747"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Play3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f68b010-6203-4fc2-aa36-a8c452ab046f"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Play4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Switch1 = m_Gameplay.FindAction("Switch1", throwIfNotFound: true);
        m_Gameplay_Switch2 = m_Gameplay.FindAction("Switch2", throwIfNotFound: true);
        m_Gameplay_Switch3 = m_Gameplay.FindAction("Switch3", throwIfNotFound: true);
        m_Gameplay_Switch4 = m_Gameplay.FindAction("Switch4", throwIfNotFound: true);
        m_Gameplay_Play1 = m_Gameplay.FindAction("Play1", throwIfNotFound: true);
        m_Gameplay_Play2 = m_Gameplay.FindAction("Play2", throwIfNotFound: true);
        m_Gameplay_Play3 = m_Gameplay.FindAction("Play3", throwIfNotFound: true);
        m_Gameplay_Play4 = m_Gameplay.FindAction("Play4", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private List<IGameplayActions> m_GameplayActionsCallbackInterfaces = new List<IGameplayActions>();
    private readonly InputAction m_Gameplay_Switch1;
    private readonly InputAction m_Gameplay_Switch2;
    private readonly InputAction m_Gameplay_Switch3;
    private readonly InputAction m_Gameplay_Switch4;
    private readonly InputAction m_Gameplay_Play1;
    private readonly InputAction m_Gameplay_Play2;
    private readonly InputAction m_Gameplay_Play3;
    private readonly InputAction m_Gameplay_Play4;
    public struct GameplayActions
    {
        private @GameControls m_Wrapper;
        public GameplayActions(@GameControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Switch1 => m_Wrapper.m_Gameplay_Switch1;
        public InputAction @Switch2 => m_Wrapper.m_Gameplay_Switch2;
        public InputAction @Switch3 => m_Wrapper.m_Gameplay_Switch3;
        public InputAction @Switch4 => m_Wrapper.m_Gameplay_Switch4;
        public InputAction @Play1 => m_Wrapper.m_Gameplay_Play1;
        public InputAction @Play2 => m_Wrapper.m_Gameplay_Play2;
        public InputAction @Play3 => m_Wrapper.m_Gameplay_Play3;
        public InputAction @Play4 => m_Wrapper.m_Gameplay_Play4;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void AddCallbacks(IGameplayActions instance)
        {
            if (instance == null || m_Wrapper.m_GameplayActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Add(instance);
            @Switch1.started += instance.OnSwitch1;
            @Switch1.performed += instance.OnSwitch1;
            @Switch1.canceled += instance.OnSwitch1;
            @Switch2.started += instance.OnSwitch2;
            @Switch2.performed += instance.OnSwitch2;
            @Switch2.canceled += instance.OnSwitch2;
            @Switch3.started += instance.OnSwitch3;
            @Switch3.performed += instance.OnSwitch3;
            @Switch3.canceled += instance.OnSwitch3;
            @Switch4.started += instance.OnSwitch4;
            @Switch4.performed += instance.OnSwitch4;
            @Switch4.canceled += instance.OnSwitch4;
            @Play1.started += instance.OnPlay1;
            @Play1.performed += instance.OnPlay1;
            @Play1.canceled += instance.OnPlay1;
            @Play2.started += instance.OnPlay2;
            @Play2.performed += instance.OnPlay2;
            @Play2.canceled += instance.OnPlay2;
            @Play3.started += instance.OnPlay3;
            @Play3.performed += instance.OnPlay3;
            @Play3.canceled += instance.OnPlay3;
            @Play4.started += instance.OnPlay4;
            @Play4.performed += instance.OnPlay4;
            @Play4.canceled += instance.OnPlay4;
        }

        private void UnregisterCallbacks(IGameplayActions instance)
        {
            @Switch1.started -= instance.OnSwitch1;
            @Switch1.performed -= instance.OnSwitch1;
            @Switch1.canceled -= instance.OnSwitch1;
            @Switch2.started -= instance.OnSwitch2;
            @Switch2.performed -= instance.OnSwitch2;
            @Switch2.canceled -= instance.OnSwitch2;
            @Switch3.started -= instance.OnSwitch3;
            @Switch3.performed -= instance.OnSwitch3;
            @Switch3.canceled -= instance.OnSwitch3;
            @Switch4.started -= instance.OnSwitch4;
            @Switch4.performed -= instance.OnSwitch4;
            @Switch4.canceled -= instance.OnSwitch4;
            @Play1.started -= instance.OnPlay1;
            @Play1.performed -= instance.OnPlay1;
            @Play1.canceled -= instance.OnPlay1;
            @Play2.started -= instance.OnPlay2;
            @Play2.performed -= instance.OnPlay2;
            @Play2.canceled -= instance.OnPlay2;
            @Play3.started -= instance.OnPlay3;
            @Play3.performed -= instance.OnPlay3;
            @Play3.canceled -= instance.OnPlay3;
            @Play4.started -= instance.OnPlay4;
            @Play4.performed -= instance.OnPlay4;
            @Play4.canceled -= instance.OnPlay4;
        }

        public void RemoveCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameplayActions instance)
        {
            foreach (var item in m_Wrapper.m_GameplayActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameplayActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    public interface IGameplayActions
    {
        void OnSwitch1(InputAction.CallbackContext context);
        void OnSwitch2(InputAction.CallbackContext context);
        void OnSwitch3(InputAction.CallbackContext context);
        void OnSwitch4(InputAction.CallbackContext context);
        void OnPlay1(InputAction.CallbackContext context);
        void OnPlay2(InputAction.CallbackContext context);
        void OnPlay3(InputAction.CallbackContext context);
        void OnPlay4(InputAction.CallbackContext context);
    }
}
